// ---------------------------------------------------------------------------

#ifndef MainFormH
#define MainFormH
// ---------------------------------------------------------------------------
#include <Classes.hpp>
#include <Controls.hpp>
#include <StdCtrls.hpp>
#include <Forms.hpp>
#include "RzPanel.hpp"
#include "RzStatus.hpp"
#include <ExtCtrls.hpp>
#include <ImgList.hpp>
#include "RzButton.hpp"
#include <Math.hpp>
#include <math.h>
#include "RzSplit.hpp"
#include <GL/gl.h>
#include <GL/glu.h>
#define Pi M_PI

enum TStateInput {
	siNone, siManualDrag, siSector, siCircle, siClick
};

struct TColorGL {
	float R, G, B, a;
};

struct TRecSector {
	float dA, dD, Angl, D;
	int UserID;
	TColorGL Color;
	bool Enable;
};

struct TRecGPSFloat {
	float x, y, z, m;
	TStateInput State;
};

const GLfloat MC[4] = {0.5, 0.0, 1.0, 1.0}; // массив свойств материала

GLfloat ColorGLObj[4];
GLfloat ObjColor[4] = {0, 1, 0, 0.5};
GLfloat KMPColorGLObj[4] = {0.6, 0.6, 0, 0.5};
GLfloat TColorGLObj[4] = {0, 1, 0, 0.5};
GLfloat WColorGLObj[4] = {0, 1, 0.3, 0.5};
GLfloat AColorGLObj[4] = {1, 0, 0, 1};
GLfloat SelColorGLObj[4] = {1, 1, 1, 1};
GLfloat SecColorGLObj[4] = {1, 1, 0.1, 0.9};
GLfloat UookColorGLObj[4] = {153 / 255, 153 / 255, 1, 1};
GLfloat UookModColorGLObj[4] = {1, 0, 0, 1};

// ---------------------------------------------------------------------------
class TForm1 : public TForm {
__published: // IDE-managed Components

	TRzStatusBar *RzStatusBar1;
	TRzToolbar *RzToolbar1;
	TRzFieldStatus *RzGL_Vendor;
	TRzFieldStatus *RzGL_Renderer;
	TRzFieldStatus *RzGL_Version;
	TImageList *ImageList1;
	TRzToolButton *BtnExecute;
	TRzToolButton *BtnUtilities;
	TRzToolButton *BtnPost;
	TRzToolButton *BtnRefresh;
	TRzToolButton *BtnCancel;
	TRzSpacer *RzSpacer1;
	TRzSpacer *RzSpacer2;
	TRzSpacer *RzSpacer3;
	TRzSpacer *RzSpacer4;
	TRzPanel *RzPanel1;

	void __fastcall FormCreate(TObject *Sender);
	void __fastcall FormDestroy(TObject *Sender);
	void __fastcall FormResize(TObject *Sender);
	void __fastcall RzPanel1Paint(TObject *Sender);
	void __fastcall FormMouseWheel(TObject *Sender, TShiftState Shift, int WheelDelta, TPoint &MousePos, bool &Handled);

private: // User declarations

	void __fastcall PaintGrid();
	void __fastcall SetDCPixelFormat(HDC hdc);

	void __fastcall TForm1::InitViewProection(float x, float y, float dXX, float dYY);
	void __fastcall TForm1::InitViewProection();
	void __fastcall TForm1::PaintCurrentCircle();
	void __fastcall TForm1::DrawAxis();

	HWND hwnd1;
	HGLRC hrc1;
	HDC dc1;

	HWND hwnd2;
	HGLRC hrc2;
	HDC dc2;

	GLfloat R, G, B, xpos, ypos;
	bool mode1;
	GLfloat MCGrid[4];
	GLfloat MCPoint[4];
	GLfloat MCTarget[4];
	GLfloat tX, tY, DX, DY;
	TColorGL Cl;
	int FBreakPosSector;
	float FOldSectorPos;
	TPoint FLastMousePoint;
	GLUquadricObj *quadObj;

public: // User declarations

	TRecGPSFloat MousePosMove, MousePosDown, GPSCursor0, GPSCursor1, ResultShiftScene;
	float PosZoomX1, PosZoomY1, PosZoomX2, PosZoomY2, Diagonal, Zoom;

	__fastcall TForm1(TComponent* Owner);
};

// ---------------------------------------------------------------------------
extern PACKAGE TForm1 *Form1;
// ---------------------------------------------------------------------------
#endif
